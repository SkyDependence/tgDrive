name: Build and Release stable

# 【第一步：监听信号】
on:
  push:
    tags:
      - 'v*'

jobs:
  # 任务的名字
  build-and-release:
    # 在最新的Ubuntu机器人上运行
    runs-on: ubuntu-latest

    steps:
      # 第一步：把你的代码菜谱拿到机器人厨房里
      - name: Checkout code
        uses: actions/checkout@v4

      # ============================================
      #  前端配菜制作区 喵~
      # ============================================
      # 第二步：准备好我们的“前端厨房”，确保里面有Node.js调料！
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: tgDrive-front-main/package-lock.json

      # 第三步：开始制作香喷喷的“前端配菜”！
      - name: Install Frontend Dependencies
        run: npm install
        working-directory: ./tgDrive-front-main # 【关键！】告诉机器人在前端目录里操作！

      - name: Build Frontend
        run: npm run build
        working-directory: ./tgDrive-front-main # 【关键！】

      # ============================================
      #  后端主食与封装区 喵~
      # ============================================
      # 第四步：准备好我们的“后端厨房”，要有Java调料和Maven和面机！
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      # 第五步：【✨ 魔法核心！✨】开始摆盘！
      - name: Clear old static files
        run: rm -rf src/main/resources/static/*

      - name: Copy frontend build to backend static folder
        run: cp -r tgDrive-front-main/dist/* src/main/resources/static/

      # 第六步：封装我们的“豪华全栈罐头”！
      - name: Build with Maven
        run: mvn -B package --file pom.xml -DskipTests

      # ============================================
      #  上架售卖区 喵~
      # ============================================
      # 第七步：在“珍宝展览馆”里创建展台
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          generate_release_notes: true
          draft: false
          prerelease: false

      # 第八步：把我们做好的“豪华罐头”放到展台上！
      - name: Upload Release Asset (JAR)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/app.jar
          asset_name: tgDrive-${{ github.ref_name }}.jar
          asset_content_type: application/java-archive

      # ============================================
      #  Docker豪华飞船生产线 喵~
      # ============================================
      # 第九步：准备好多平台构建的魔法模拟器和超级厨房！
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 第十步：登录到我们的“餐厅仓库”（Docker Hub）
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 第十一步：开始建造并推送我们的豪华飞船！
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          # 【最关键的标签魔法！】
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/tgdrive:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/tgdrive:${{ github.ref_name }}